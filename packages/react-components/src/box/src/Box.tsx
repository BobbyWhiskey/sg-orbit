import { AsAttributeWithChildren, ForwardedRefAttribute, SlotAttribute, omitProps } from "../../shared";
import { ReactElement, forwardRef } from "react";

export interface StrictBoxProps extends AsAttributeWithChildren, SlotAttribute, ForwardedRefAttribute {
}

export interface BoxProps extends StrictBoxProps {
    /**
     * This property is used to allow extra properties to be passed down to the component generated by the "as" property
     */
    [key: string]: any;
}

export function InnerBox(props: BoxProps): ReactElement {
    const {
        as: ElementType = "div",
        children,
        forwardedRef,
        ...rest
    } = omitProps(props, ["slot"]);

    return (
        <ElementType
            {...rest}
            ref={forwardedRef}
        >
            {children}
        </ElementType>
    );
}

export const Box = forwardRef<any, BoxProps>((props, ref) => (
    <InnerBox {...props} forwardedRef={ref} />
));

Box.displayName = "Box";

